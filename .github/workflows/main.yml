name: C/C++ CI

on: [push, pull_request]

jobs:    
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: get-dependencies
      run: brew unlink unixodbc && brew install curl && brew install cmake && brew install libiodbc
    - name: configure
      run: mkdir build && cd build && cmake ../src && cd ..
    - name: build
      run: cmake --build build
    - name: upload-build-output
      if: success()
      run: |
        mkdir -p sql-odbc-builds
        cp ./lib64/libelasticodbc.dylib sql-odbc-builds
    - name: test
      run: | 
        bash ./run_test_runner.sh
        mkdir -p sql-odbc-builds
        cp ./bin64/*.html sql-odbc-builds
    - name: upload-test-output
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: sql-odbc-test-output
        path: sql-odbc-builds
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: mkdir build ; cd build ; cmake ..\\src ; cd ..
    - name: build
      run: cmake --build build --config Release
    - name: check-output
      if: always()
      run: echo "$PWD" ; .\\bin64\\Release\\ut_conn.exe
    - name: upload-build-output
      if: always()
      run: |
        mkdir -p sql-odbc-builds
        cp .\\bin64\\Release\\elasticodbc.dll sql-odbc-builds
        cp .\\lib64\\Release\\elasticodbc.lib sql-odbc-builds
    - name: test
      run: .\run_test_runner.bat
    - name: create-test-output
      if: always()
      run: |
        mkdir -p sql-odbc-builds
        cp .\\bin64\\Release\\*.html sql-odbc-builds
    - name: upload-test-output
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: sql-odbc-test-output
        path: sql-odbc-builds
